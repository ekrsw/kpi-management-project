services:
  postgres:
    build:
      context: ./containers/postgresql
      dockerfile: Dockerfile
    container_name: kpi_postgres
    environment:
      - POSTGRES_USER=${DATABASE_USER:-admin}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD:-my_database_password}
      - POSTGRES_DB=${DATABASE_NAME:-my_database}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./containers/postgresql/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "${DATABASE_PORT:-5432}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DATABASE_USER:-admin} -d ${DATABASE_NAME:-my_database}"]
      interval: 10s
      timeout: 5s
      retries: 5

  fastapi:
    build:
      context: .
      dockerfile: containers/fast_api/Dockerfile
    container_name: kpi_fastapi
    environment:
      - DATABASE_HOST=postgres
      - DATABASE_PORT=5432
      - DATABASE_USER=${DATABASE_USER:-admin}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD:-my_database_password}
      - DATABASE_NAME=${DATABASE_NAME:-my_database}
      - API_HOST=${API_HOST:-0.0.0.0}
      - API_PORT=${API_PORT:-8000}
      - SECRET_KEY=${SECRET_KEY}
      - REFRESH_SECRET_KEY=${REFRESH_SECRET_KEY}
      - INITIAL_ADMIN_USERNAME=${INITIAL_ADMIN_USERNAME}
      - INITIAL_ADMIN_PASSWORD=${INITIAL_ADMIN_PASSWORD}
    volumes:
      - .:/app
    depends_on:
      postgres:
        condition: service_healthy

  nginx:
    build:
      context: ./containers/nginx
      dockerfile: Dockerfile
    container_name: kpi_nginx
    ports:
      - "${NGINX_PORT}:80"
    depends_on:
      - fastapi

volumes:
  postgres_data:
