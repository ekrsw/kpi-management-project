services:
  postgres:
    image: postgres:15-alpine
    container_name: kpi_postgres
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./containers/postgresql/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "${POSTGRES_PORT}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  fastapi:
    build:
      context: .
      dockerfile: containers/fast_api/Dockerfile
    container_name: kpi_fastapi
    environment:
      - DATABASE_URL=${DATABASE_URL}
    volumes:
      - .:/app
    depends_on:
      postgres:
        condition: service_healthy

  nginx:
    build:
      context: ./containers/nginx
      dockerfile: Dockerfile
    container_name: kpi_nginx
    ports:
      - "${NGINX_PORT}:80"
    depends_on:
      - fastapi

volumes:
  postgres_data:
